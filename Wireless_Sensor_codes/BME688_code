#include <WiFi.h>
#include <HTTPClient.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include "Adafruit_BME680.h"

#define BME_SDA 21  // SDA pin for I2C
#define BME_SCL 22  // SCL pin for I2C

Adafruit_BME680 bme;

// Wi-Fi credentials
const char* ssid = "Abc";         // Wi-Fi SSID
const char* password = "12345678"; // Wi-Fi password

// Raspberry Pi server URL
const char* serverName = "http://172.20.10.2:5000/bme688-data";  // Raspberry Pi IP

void setup() {
  Serial.begin(115200);
  Wire.begin(BME_SDA, BME_SCL);  // Start I2C

  // Initialize BME688 sensor
  if (!bme.begin()) {
    Serial.println("BME680 sensor not found!");
    while (1);
  }

  // Configure sensor settings
  bme.setTemperatureOversampling(BME680_OS_8X);
  bme.setHumidityOversampling(BME680_OS_2X);
  bme.setPressureOversampling(BME680_OS_4X);
  bme.setIIRFilterSize(BME680_FILTER_SIZE_3);
  bme.setGasHeater(320, 150);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to Wi-Fi");
}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    if (bme.performReading()) {
      // Format sensor data as JSON
      String payload = "{\"temperature\":" + String(bme.temperature) +
                       ",\"humidity\":" + String(bme.humidity) +
                       ",\"pressure\":" + String(bme.pressure / 100.0) +
                       ",\"gas_resistance\":" + String(bme.gas_resistance / 1000.0) + "}";

      HTTPClient http;
      http.begin(serverName);  
      http.addHeader("Content-Type", "application/json");

      int httpResponseCode = http.POST(payload);  // Send POST request
      Serial.println("POST Response Code: " + String(httpResponseCode));

      http.end();  // Close HTTP connection
    } else {
      Serial.println("Failed to perform reading!");
    }
  } else {
    Serial.println("Wi-Fi not connected");
  }
  delay(10000);  // Delay between readings
}
